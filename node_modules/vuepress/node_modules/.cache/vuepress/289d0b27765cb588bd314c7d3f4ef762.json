{"remainingRequest":"/Users/get/Desktop/vue-vuepress/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/get/Desktop/vue-vuepress/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/get/Desktop/vue-vuepress/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/get/Desktop/vue-vuepress/.vuepress/components/mongoose.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/get/Desktop/vue-vuepress/.vuepress/components/mongoose.vue","mtime":1546827059405},{"path":"/Users/get/Desktop/vue-vuepress/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/get/Desktop/vue-vuepress/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/get/Desktop/vue-vuepress/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/get/Desktop/vue-vuepress/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/get/Desktop/vue-vuepress/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  mounted: function mounted() {\n    console.log(\"mounted\");\n    this.getData();\n  },\n  data: function data() {\n    return {\n      buttonMsg: \"Click to generate\",\n      text: null,\n      posts: null\n    };\n  },\n  computed: {},\n  created: function created() {},\n  methods: {\n    getData: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"created always run first\");\n                _context.prev = 1;\n                _context.next = 4;\n                return axios.get(\"https://vue-two.herokuapp.com/api/posts/\");\n\n              case 4:\n                res = _context.sent;\n                data = res.data;\n                this.contents = data; //PRINT JSON\n\n                this.posts = data;\n                console.log(res.data);\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 11]]);\n      }));\n\n      return function getData() {\n        return _getData.apply(this, arguments);\n      };\n    }(),\n    formatDate: function formatDate(date) {\n      var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      var d = new Date(date);\n      var namedMonth = months[d.getMonth()];\n      return \"\".concat(namedMonth, \" \").concat(d.getDate(), \", \").concat(d.getFullYear(), \" }\");\n    },\n    deletePost: function deletePost(idNum) {\n      console.log(idNum);\n    },\n    resetDisplay: function resetDisplay() {\n      this.posts = \"\";\n    },\n    postone: function postone() {\n      var _this = this;\n\n      // let self = this;\n      axios.post(\"https://vue-two.herokuapp.com/api/posts/\", {\n        text: this.text,\n        createdAt: new Date()\n      }).then(function (response) {\n        axios.get(\"https://vue-two.herokuapp.com/api/posts/\").then(function (update) {\n          _this.contents = update.data;\n          _this.posts = update.data;\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n};",{"version":3,"sources":[".vuepress/components/mongoose.vue"],"names":["axios","mounted","console","log","getData","data","buttonMsg","text","posts","computed","created","methods","get","res","contents","formatDate","date","months","d","Date","namedMonth","getMonth","getDate","getFullYear","deletePost","idNum","resetDisplay","postone","post","createdAt","then","update","catch","error"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,SADa,qBACH;AACRC,YAAQC,GAAR,CAAY,SAAZ;AACA,SAAKC,OAAL;AACD,GAJY;AAKbC,MALa,kBAKN;AACL,WAAO;AACLC,iBAAW,mBADN;AAELC,YAAM,IAFD;AAGLC,aAAO;AAHF,KAAP;AAKD,GAXY;AAYbC,YAAU,EAZG;AAabC,SAba,qBAaH,CAAE,CAbC;AAcbC,WAAS;AACDP,WADC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELF,wBAAQC,GAAR,CAAY,0BAAZ;AAFK;AAAA;AAAA,uBAIeH,MAAMY,GAAN,CAAU,0CAAV,CAJf;;AAAA;AAIGC,mBAJH;AAKGR,oBALH,GAKUQ,IAAIR,IALd;AAMH,qBAAKS,QAAL,GAAgBT,IAAhB,CANG,CAMmB;;AACtB,qBAAKG,KAAL,GAAaH,IAAb;AACAH,wBAAQC,GAAR,CAAYU,IAAIR,IAAhB;AARG;AAAA;;AAAA;AAAA;AAAA;AAUHH,wBAAQC,GAAR;;AAVG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAaPY,cAbO,sBAaIC,IAbJ,EAaU;AACf,UAAIC,SAAS,CACX,SADW,EAEX,UAFW,EAGX,OAHW,EAIX,OAJW,EAKX,KALW,EAMX,MANW,EAOX,MAPW,EAQX,QARW,EASX,WATW,EAUX,SAVW,EAWX,UAXW,EAYX,UAZW,CAAb;AAcA,UAAIC,IAAI,IAAIC,IAAJ,CAASH,IAAT,CAAR;AACA,UAAII,aAAaH,OAAOC,EAAEG,QAAF,EAAP,CAAjB;AACA,uBAAUD,UAAV,cAAwBF,EAAEI,OAAF,EAAxB,eAAwCJ,EAAEK,WAAF,EAAxC;AACD,KA/BM;AAgCPC,cAhCO,sBAgCIC,KAhCJ,EAgCW;AAChBvB,cAAQC,GAAR,CAAYsB,KAAZ;AACD,KAlCM;AAmCPC,gBAnCO,0BAmCQ;AACb,WAAKlB,KAAL,GAAa,EAAb;AACD,KArCM;AAsCPmB,WAtCO,qBAsCG;AAAA;;AACR;AACA3B,YACG4B,IADH,CACQ,0CADR,EACoD;AAChDrB,cAAM,KAAKA,IADqC;AAEhDsB,mBAAW,IAAIV,IAAJ;AAFqC,OADpD,EAKGW,IALH,CAKQ,oBAAY;AAChB9B,cAAMY,GAAN,CAAU,0CAAV,EAAsDkB,IAAtD,CAA2D,kBAAU;AACnE,gBAAKhB,QAAL,GAAgBiB,OAAO1B,IAAvB;AACA,gBAAKG,KAAL,GAAauB,OAAO1B,IAApB;AACD,SAHD;AAID,OAVH,EAWG2B,KAXH,CAWS,UAASC,KAAT,EAAgB;AACrB/B,gBAAQC,GAAR,CAAY8B,KAAZ;AACD,OAbH;AAcD;AAtDM;AAdI,CAAf","sourceRoot":"/Users/get/Desktop/vue-vuepress","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\";\n\nexport default {\n  mounted() {\n    console.log(\"mounted\");\n    this.getData();\n  },\n  data() {\n    return {\n      buttonMsg: \"Click to generate\",\n      text: null,\n      posts: null\n    };\n  },\n  computed: {},\n  created() {},\n  methods: {\n    async getData() {\n      console.log(\"created always run first\");\n      try {\n        const res = await axios.get(\"https://vue-two.herokuapp.com/api/posts/\");\n        const data = res.data;\n        this.contents = data; //PRINT JSON\n        this.posts = data;\n        console.log(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    formatDate(date) {\n      var months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n      ];\n      var d = new Date(date);\n      var namedMonth = months[d.getMonth()];\n      return `${namedMonth} ${d.getDate()}, ${d.getFullYear()} }`;\n    },\n    deletePost(idNum) {\n      console.log(idNum);\n    },\n    resetDisplay() {\n      this.posts = \"\";\n    },\n    postone() {\n      // let self = this;\n      axios\n        .post(\"https://vue-two.herokuapp.com/api/posts/\", {\n          text: this.text,\n          createdAt: new Date()\n        })\n        .then(response => {\n          axios.get(\"https://vue-two.herokuapp.com/api/posts/\").then(update => {\n            this.contents = update.data;\n            this.posts = update.data;\n          });\n        })\n        .catch(function(error) {\n          console.log(error);\n        });\n    }\n  }\n};\n"]}]}